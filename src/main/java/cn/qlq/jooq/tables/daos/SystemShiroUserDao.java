/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.daos;


import cn.qlq.jooq.tables.SYSTEM_SHIRO_USER;
import cn.qlq.jooq.tables.pojos.SystemShiroUser;
import cn.qlq.jooq.tables.records.SystemShiroUserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemShiroUserDao extends DAOImpl<SystemShiroUserRecord, SystemShiroUser, Integer> {

    /**
     * Create a new SystemShiroUserDao without any configuration
     */
    public SystemShiroUserDao() {
        super(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER, SystemShiroUser.class);
    }

    /**
     * Create a new SystemShiroUserDao with an attached configuration
     */
    public SystemShiroUserDao(Configuration configuration) {
        super(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER, SystemShiroUser.class, configuration);
    }

    @Override
    public Integer getId(SystemShiroUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SystemShiroUser> fetchById(Integer... values) {
        return fetch(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SystemShiroUser fetchOneById(Integer value) {
        return fetchOne(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.ID, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroUser> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<SystemShiroUser> fetchByPassword(String... values) {
        return fetch(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroUser> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<SystemShiroUser> fetchByUsername(String... values) {
        return fetch(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.USERNAME, values);
    }
}
