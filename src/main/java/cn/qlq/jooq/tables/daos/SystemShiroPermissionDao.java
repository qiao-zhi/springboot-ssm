/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.daos;


import cn.qlq.jooq.tables.SYSTEM_SHIRO_PERMISSION;
import cn.qlq.jooq.tables.pojos.SystemShiroPermission;
import cn.qlq.jooq.tables.records.SystemShiroPermissionRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemShiroPermissionDao extends DAOImpl<SystemShiroPermissionRecord, SystemShiroPermission, Integer> {

    /**
     * Create a new SystemShiroPermissionDao without any configuration
     */
    public SystemShiroPermissionDao() {
        super(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION, SystemShiroPermission.class);
    }

    /**
     * Create a new SystemShiroPermissionDao with an attached configuration
     */
    public SystemShiroPermissionDao(Configuration configuration) {
        super(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION, SystemShiroPermission.class, configuration);
    }

    @Override
    public Integer getId(SystemShiroPermission object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroPermission> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SystemShiroPermission> fetchById(Integer... values) {
        return fetch(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SystemShiroPermission fetchOneById(Integer value) {
        return fetchOne(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.ID, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroPermission> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<SystemShiroPermission> fetchByDescription(String... values) {
        return fetch(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroPermission> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<SystemShiroPermission> fetchByName(String... values) {
        return fetch(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.NAME, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroPermission> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<SystemShiroPermission> fetchByUrl(String... values) {
        return fetch(SYSTEM_SHIRO_PERMISSION.SYSTEM_SHIRO_PERMISSION.URL, values);
    }
}
