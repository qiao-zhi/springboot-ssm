/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.daos;


import cn.qlq.jooq.tables.SYSTEM_SHIRO_ROLE;
import cn.qlq.jooq.tables.pojos.SystemShiroRole;
import cn.qlq.jooq.tables.records.SystemShiroRoleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemShiroRoleDao extends DAOImpl<SystemShiroRoleRecord, SystemShiroRole, Integer> {

    /**
     * Create a new SystemShiroRoleDao without any configuration
     */
    public SystemShiroRoleDao() {
        super(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE, SystemShiroRole.class);
    }

    /**
     * Create a new SystemShiroRoleDao with an attached configuration
     */
    public SystemShiroRoleDao(Configuration configuration) {
        super(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE, SystemShiroRole.class, configuration);
    }

    @Override
    public Integer getId(SystemShiroRole object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroRole> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SystemShiroRole> fetchById(Integer... values) {
        return fetch(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SystemShiroRole fetchOneById(Integer value) {
        return fetchOne(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroRole> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<SystemShiroRole> fetchByDescription(String... values) {
        return fetch(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemShiroRole> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<SystemShiroRole> fetchByName(String... values) {
        return fetch(SYSTEM_SHIRO_ROLE.SYSTEM_SHIRO_ROLE.NAME, values);
    }
}
