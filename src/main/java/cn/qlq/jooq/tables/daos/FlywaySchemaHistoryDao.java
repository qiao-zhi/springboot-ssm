/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.daos;


import cn.qlq.jooq.tables.FLYWAY_SCHEMA_HISTORY;
import cn.qlq.jooq.tables.pojos.FlywaySchemaHistory;
import cn.qlq.jooq.tables.records.FlywaySchemaHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlywaySchemaHistoryDao extends DAOImpl<FlywaySchemaHistoryRecord, FlywaySchemaHistory, Integer> {

    /**
     * Create a new FlywaySchemaHistoryDao without any configuration
     */
    public FlywaySchemaHistoryDao() {
        super(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY, FlywaySchemaHistory.class);
    }

    /**
     * Create a new FlywaySchemaHistoryDao with an attached configuration
     */
    public FlywaySchemaHistoryDao(Configuration configuration) {
        super(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY, FlywaySchemaHistory.class, configuration);
    }

    @Override
    public Integer getId(FlywaySchemaHistory object) {
        return object.getInstalledRank();
    }

    /**
     * Fetch records that have <code>installed_rank BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfInstalledRank(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>installed_rank IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByInstalledRank(Integer... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK, values);
    }

    /**
     * Fetch a unique record that has <code>installed_rank = value</code>
     */
    public FlywaySchemaHistory fetchOneByInstalledRank(Integer value) {
        return fetchOne(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK, value);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByVersion(String... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.VERSION, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByDescription(String... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByType(String... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.TYPE, values);
    }

    /**
     * Fetch records that have <code>script BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfScript(String lowerInclusive, String upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.SCRIPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>script IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByScript(String... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.SCRIPT, values);
    }

    /**
     * Fetch records that have <code>checksum BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfChecksum(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.CHECKSUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>checksum IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByChecksum(Integer... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.CHECKSUM, values);
    }

    /**
     * Fetch records that have <code>installed_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfInstalledBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>installed_by IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByInstalledBy(String... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_BY, values);
    }

    /**
     * Fetch records that have <code>installed_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfInstalledOn(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>installed_on IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByInstalledOn(Timestamp... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.INSTALLED_ON, values);
    }

    /**
     * Fetch records that have <code>execution_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfExecutionTime(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.EXECUTION_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>execution_time IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchByExecutionTime(Integer... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.EXECUTION_TIME, values);
    }

    /**
     * Fetch records that have <code>success BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<FlywaySchemaHistory> fetchRangeOfSuccess(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.SUCCESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>success IN (values)</code>
     */
    public List<FlywaySchemaHistory> fetchBySuccess(Byte... values) {
        return fetch(FLYWAY_SCHEMA_HISTORY.FLYWAY_SCHEMA_HISTORY.SUCCESS, values);
    }
}
