/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables;


import cn.qlq.jooq.Indexes;
import cn.qlq.jooq.Keys;
import cn.qlq.jooq.Test1;
import cn.qlq.jooq.tables.records.MpUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MP_USER extends TableImpl<MpUserRecord> {

    private static final long serialVersionUID = 280175280;

    /**
     * The reference instance of <code>test1.mp_user</code>
     */
    public static final MP_USER MP_USER = new MP_USER();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpUserRecord> getRecordType() {
        return MpUserRecord.class;
    }

    /**
     * The column <code>test1.mp_user.id</code>.
     */
    public final TableField<MpUserRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>test1.mp_user.age</code>.
     */
    public final TableField<MpUserRecord, Integer> AGE = createField(DSL.name("age"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>test1.mp_user.deleted</code>.
     */
    public final TableField<MpUserRecord, Integer> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>test1.mp_user.email</code>.
     */
    public final TableField<MpUserRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>test1.mp_user.name</code>.
     */
    public final TableField<MpUserRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>test1.mp_user.unique_code</code>.
     */
    public final TableField<MpUserRecord, String> UNIQUE_CODE = createField(DSL.name("unique_code"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>test1.mp_user</code> table reference
     */
    public MP_USER() {
        this(DSL.name("mp_user"), null);
    }

    /**
     * Create an aliased <code>test1.mp_user</code> table reference
     */
    public MP_USER(String alias) {
        this(DSL.name(alias), MP_USER);
    }

    /**
     * Create an aliased <code>test1.mp_user</code> table reference
     */
    public MP_USER(Name alias) {
        this(alias, MP_USER);
    }

    private MP_USER(Name alias, Table<MpUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private MP_USER(Name alias, Table<MpUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MP_USER(Table<O> child, ForeignKey<O, MpUserRecord> key) {
        super(child, key, MP_USER);
    }

    @Override
    public Schema getSchema() {
        return Test1.TEST1;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_USER_PRIMARY);
    }

    @Override
    public UniqueKey<MpUserRecord> getPrimaryKey() {
        return Keys.KEY_MP_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<MpUserRecord>> getKeys() {
        return Arrays.<UniqueKey<MpUserRecord>>asList(Keys.KEY_MP_USER_PRIMARY);
    }

    @Override
    public MP_USER as(String alias) {
        return new MP_USER(DSL.name(alias), this);
    }

    @Override
    public MP_USER as(Name alias) {
        return new MP_USER(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MP_USER rename(String name) {
        return new MP_USER(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MP_USER rename(Name name) {
        return new MP_USER(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Integer, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
