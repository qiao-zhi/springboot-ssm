/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.records;


import cn.qlq.jooq.tables.SYSTEM_SHIRO_ROLE_PERMISSIONS;
import cn.qlq.jooq.tables.interfaces.ISystemShiroRolePermissions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemShiroRolePermissionsRecord extends TableRecordImpl<SystemShiroRolePermissionsRecord> implements Record2<Integer, Integer>, ISystemShiroRolePermissions {

    private static final long serialVersionUID = 1142122401;

    /**
     * Setter for <code>test1.system_shiro_role_permissions.role_id</code>.
     */
    @Override
    public void setRoleId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test1.system_shiro_role_permissions.role_id</code>.
     */
    @Override
    public Integer getRoleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test1.system_shiro_role_permissions.permissions_id</code>.
     */
    @Override
    public void setPermissionsId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test1.system_shiro_role_permissions.permissions_id</code>.
     */
    @Override
    public Integer getPermissionsId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SYSTEM_SHIRO_ROLE_PERMISSIONS.SYSTEM_SHIRO_ROLE_PERMISSIONS.ROLE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return SYSTEM_SHIRO_ROLE_PERMISSIONS.SYSTEM_SHIRO_ROLE_PERMISSIONS.PERMISSIONS_ID;
    }

    @Override
    public Integer component1() {
        return getRoleId();
    }

    @Override
    public Integer component2() {
        return getPermissionsId();
    }

    @Override
    public Integer value1() {
        return getRoleId();
    }

    @Override
    public Integer value2() {
        return getPermissionsId();
    }

    @Override
    public SystemShiroRolePermissionsRecord value1(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public SystemShiroRolePermissionsRecord value2(Integer value) {
        setPermissionsId(value);
        return this;
    }

    @Override
    public SystemShiroRolePermissionsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISystemShiroRolePermissions from) {
        setRoleId(from.getRoleId());
        setPermissionsId(from.getPermissionsId());
    }

    @Override
    public <E extends ISystemShiroRolePermissions> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemShiroRolePermissionsRecord
     */
    public SystemShiroRolePermissionsRecord() {
        super(SYSTEM_SHIRO_ROLE_PERMISSIONS.SYSTEM_SHIRO_ROLE_PERMISSIONS);
    }

    /**
     * Create a detached, initialised SystemShiroRolePermissionsRecord
     */
    public SystemShiroRolePermissionsRecord(Integer roleId, Integer permissionsId) {
        super(SYSTEM_SHIRO_ROLE_PERMISSIONS.SYSTEM_SHIRO_ROLE_PERMISSIONS);

        set(0, roleId);
        set(1, permissionsId);
    }
}
