/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.records;


import cn.qlq.jooq.tables.USER2;
import cn.qlq.jooq.tables.interfaces.IUser2;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User2Record extends UpdatableRecordImpl<User2Record> implements Record9<Integer, String, Timestamp, String, String, String, String, String, Integer>, IUser2 {

    private static final long serialVersionUID = 1112814810;

    /**
     * Setter for <code>test1.user2.id</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test1.user2.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test1.user2.address</code>.
     */
    @Override
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test1.user2.address</code>.
     */
    @Override
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test1.user2.createtime</code>.
     */
    @Override
    public void setCreatetime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>test1.user2.createtime</code>.
     */
    @Override
    public Timestamp getCreatetime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>test1.user2.isdeleted</code>.
     */
    @Override
    public void setIsdeleted(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test1.user2.isdeleted</code>.
     */
    @Override
    public String getIsdeleted() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test1.user2.password</code>.
     */
    @Override
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test1.user2.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test1.user2.sex</code>.
     */
    @Override
    public void setSex(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test1.user2.sex</code>.
     */
    @Override
    public String getSex() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test1.user2.userfullname</code>.
     */
    @Override
    public void setUserfullname(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>test1.user2.userfullname</code>.
     */
    @Override
    public String getUserfullname() {
        return (String) get(6);
    }

    /**
     * Setter for <code>test1.user2.username</code>.
     */
    @Override
    public void setUsername(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>test1.user2.username</code>.
     */
    @Override
    public String getUsername() {
        return (String) get(7);
    }

    /**
     * Setter for <code>test1.user2.country_id</code>.
     */
    @Override
    public void setCountryId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>test1.user2.country_id</code>.
     */
    @Override
    public Integer getCountryId() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, Timestamp, String, String, String, String, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, Timestamp, String, String, String, String, String, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return USER2.USER2.ID;
    }

    @Override
    public Field<String> field2() {
        return USER2.USER2.ADDRESS;
    }

    @Override
    public Field<Timestamp> field3() {
        return USER2.USER2.CREATETIME;
    }

    @Override
    public Field<String> field4() {
        return USER2.USER2.ISDELETED;
    }

    @Override
    public Field<String> field5() {
        return USER2.USER2.PASSWORD;
    }

    @Override
    public Field<String> field6() {
        return USER2.USER2.SEX;
    }

    @Override
    public Field<String> field7() {
        return USER2.USER2.USERFULLNAME;
    }

    @Override
    public Field<String> field8() {
        return USER2.USER2.USERNAME;
    }

    @Override
    public Field<Integer> field9() {
        return USER2.USER2.COUNTRY_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public Timestamp component3() {
        return getCreatetime();
    }

    @Override
    public String component4() {
        return getIsdeleted();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public String component6() {
        return getSex();
    }

    @Override
    public String component7() {
        return getUserfullname();
    }

    @Override
    public String component8() {
        return getUsername();
    }

    @Override
    public Integer component9() {
        return getCountryId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public Timestamp value3() {
        return getCreatetime();
    }

    @Override
    public String value4() {
        return getIsdeleted();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public String value6() {
        return getSex();
    }

    @Override
    public String value7() {
        return getUserfullname();
    }

    @Override
    public String value8() {
        return getUsername();
    }

    @Override
    public Integer value9() {
        return getCountryId();
    }

    @Override
    public User2Record value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public User2Record value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public User2Record value3(Timestamp value) {
        setCreatetime(value);
        return this;
    }

    @Override
    public User2Record value4(String value) {
        setIsdeleted(value);
        return this;
    }

    @Override
    public User2Record value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public User2Record value6(String value) {
        setSex(value);
        return this;
    }

    @Override
    public User2Record value7(String value) {
        setUserfullname(value);
        return this;
    }

    @Override
    public User2Record value8(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public User2Record value9(Integer value) {
        setCountryId(value);
        return this;
    }

    @Override
    public User2Record values(Integer value1, String value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser2 from) {
        setId(from.getId());
        setAddress(from.getAddress());
        setCreatetime(from.getCreatetime());
        setIsdeleted(from.getIsdeleted());
        setPassword(from.getPassword());
        setSex(from.getSex());
        setUserfullname(from.getUserfullname());
        setUsername(from.getUsername());
        setCountryId(from.getCountryId());
    }

    @Override
    public <E extends IUser2> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached User2Record
     */
    public User2Record() {
        super(USER2.USER2);
    }

    /**
     * Create a detached, initialised User2Record
     */
    public User2Record(Integer id, String address, Timestamp createtime, String isdeleted, String password, String sex, String userfullname, String username, Integer countryId) {
        super(USER2.USER2);

        set(0, id);
        set(1, address);
        set(2, createtime);
        set(3, isdeleted);
        set(4, password);
        set(5, sex);
        set(6, userfullname);
        set(7, username);
        set(8, countryId);
    }
}
