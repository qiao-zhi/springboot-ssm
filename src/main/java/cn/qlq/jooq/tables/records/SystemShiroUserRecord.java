/*
 * This file is generated by jOOQ.
 */
package cn.qlq.jooq.tables.records;


import cn.qlq.jooq.tables.SYSTEM_SHIRO_USER;
import cn.qlq.jooq.tables.interfaces.ISystemShiroUser;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemShiroUserRecord extends UpdatableRecordImpl<SystemShiroUserRecord> implements Record3<Integer, String, String>, ISystemShiroUser {

    private static final long serialVersionUID = 209484327;

    /**
     * Setter for <code>test1.system_shiro_user.id</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test1.system_shiro_user.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test1.system_shiro_user.password</code>.
     */
    @Override
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test1.system_shiro_user.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test1.system_shiro_user.username</code>.
     */
    @Override
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test1.system_shiro_user.username</code>.
     */
    @Override
    public String getUsername() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.PASSWORD;
    }

    @Override
    public Field<String> field3() {
        return SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER.USERNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public SystemShiroUserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SystemShiroUserRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public SystemShiroUserRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public SystemShiroUserRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISystemShiroUser from) {
        setId(from.getId());
        setPassword(from.getPassword());
        setUsername(from.getUsername());
    }

    @Override
    public <E extends ISystemShiroUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemShiroUserRecord
     */
    public SystemShiroUserRecord() {
        super(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER);
    }

    /**
     * Create a detached, initialised SystemShiroUserRecord
     */
    public SystemShiroUserRecord(Integer id, String password, String username) {
        super(SYSTEM_SHIRO_USER.SYSTEM_SHIRO_USER);

        set(0, id);
        set(1, password);
        set(2, username);
    }
}
